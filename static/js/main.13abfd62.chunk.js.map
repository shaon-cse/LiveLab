{"version":3,"sources":["components/Editor.js","hooks/useLocalStorage.js","components/App.js","index.js"],"names":["Editor","props","language","displayName","value","onChange","open","setOpen","useState","_jsxs","className","children","_jsx","type","onClick","prevOpen","FontAwesomeIcon","icon","faCompressAlt","faExpandAlt","ControlledEditor","onBeforeChange","editor","data","options","lineWrapping","lint","mode","theme","lineNumbers","useLocalStorage","key","initialValue","prefixedKey","setValue","jsonValue","localStorage","getItem","JSON","parse","useEffect","setItem","stringify","App","html","setHtml","css","setCss","js","setJs","srcDoc","setSrcDoc","timeout","setTimeout","clearTimeout","_Fragment","title","sandbox","frameBorder","width","height","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"qOAUe,SAASA,EAAOC,GAC7B,MAAM,SACJC,EAAQ,YACRC,EAAW,MACXC,EAAK,SACLC,GACEJ,GACGK,EAAMC,GAAWC,oBAAS,GAMjC,OACEC,eAAA,OAAKC,UAAW,qBAAoBJ,EAAO,GAAK,aAAcK,SAAA,CAC5DF,eAAA,OAAKC,UAAU,eAAcC,SAAA,CAC1BR,EACDS,cAAA,UACEC,KAAK,SACLH,UAAU,sBACVI,QAASA,IAAMP,GAAQQ,IAAaA,IAAUJ,SAE9CC,cAACI,IAAe,CAACC,KAAMX,EAAOY,IAAgBC,WAGlDP,cAACQ,aAAgB,CACfC,eAjBN,SAAsBC,EAAQC,EAAMnB,GAClCC,EAASD,EACX,EAgBMA,MAAOA,EACPM,UAAU,sBACVc,QAAS,CACPC,cAAc,EACdC,MAAM,EACNC,KAAMzB,EACN0B,MAAO,WACPC,aAAa,OAKvB,CC7Ce,SAASC,EAAgBC,EAAKC,GAC3C,MAAMC,EAHO,iBAGgBF,GAEtB3B,EAAO8B,GAAY1B,oBAAS,KACjC,MAAM2B,EAAYC,aAAaC,QAAQJ,GACvC,OAAiB,MAAbE,EAA0BG,KAAKC,MAAMJ,GAEb,oBAAjBH,EACFA,IAEAA,CACT,IAOF,OAJAQ,qBAAU,KACRJ,aAAaK,QAAQR,EAAaK,KAAKI,UAAUtC,GAAO,GACvD,CAAC6B,EAAa7B,IAEV,CAACA,EAAO8B,EACjB,CCqCeS,MAxDf,WACE,MAAOC,EAAMC,GAAWf,EAAgB,OAAQ,KACzCgB,EAAKC,GAAUjB,EAAgB,MAAO,KACtCkB,EAAIC,GAASnB,EAAgB,KAAM,KACnCoB,EAAQC,GAAa3C,mBAAS,IAgBrC,OAdAgC,qBAAU,KACR,MAAMY,EAAUC,YAAW,KACzBF,EAAU,qCAEEP,8BACCE,gCACCE,uCAEZ,GACD,KAEH,MAAO,IAAMM,aAAaF,EAAQ,GACjC,CAACR,EAAME,EAAKE,IAGbvC,eAAA8C,WAAA,CAAA5C,SAAA,CACEF,eAAA,OAAKC,UAAU,gBAAeC,SAAA,CAC5BC,cAACZ,EAAM,CACLE,SAAS,MACTC,YAAY,OACZC,MAAOwC,EACPvC,SAAUwC,IAEZjC,cAACZ,EAAM,CACLE,SAAS,MACTC,YAAY,MACZC,MAAO0C,EACPzC,SAAU0C,IAEZnC,cAACZ,EAAM,CACLE,SAAS,aACTC,YAAY,KACZC,MAAO4C,EACP3C,SAAU4C,OAGdrC,cAAA,OAAKF,UAAU,OAAMC,SACnBC,cAAA,UACEsC,OAAQA,EACRM,MAAM,SACNC,QAAQ,gBACRC,YAAY,IACZC,MAAM,OACNC,OAAO,aAKjB,ECrDAC,IAASC,OACPlD,cAACmD,IAAMC,WAAU,CAAArD,SACfC,cAAC+B,EAAG,MAENsB,SAASC,eAAe,Q","file":"static/js/main.13abfd62.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport 'codemirror/lib/codemirror.css'\r\nimport 'codemirror/theme/material.css'\r\nimport 'codemirror/mode/xml/xml'\r\nimport 'codemirror/mode/javascript/javascript'\r\nimport 'codemirror/mode/css/css'\r\nimport { Controlled as ControlledEditor } from 'react-codemirror2'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCompressAlt, faExpandAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport default function Editor(props) {\r\n  const {\r\n    language,\r\n    displayName,\r\n    value,\r\n    onChange\r\n  } = props\r\n  const [open, setOpen] = useState(true)\r\n\r\n  function handleChange(editor, data, value) {\r\n    onChange(value)\r\n  }\r\n\r\n  return (\r\n    <div className={`editor-container ${open ? '' : 'collapsed'}`}>\r\n      <div className=\"editor-title\">\r\n        {displayName}\r\n        <button\r\n          type=\"button\"\r\n          className=\"expand-collapse-btn\"\r\n          onClick={() => setOpen(prevOpen => !prevOpen)}\r\n        >\r\n          <FontAwesomeIcon icon={open ? faCompressAlt : faExpandAlt} />\r\n        </button>\r\n      </div>\r\n      <ControlledEditor\r\n        onBeforeChange={handleChange}\r\n        value={value}\r\n        className=\"code-mirror-wrapper\"\r\n        options={{\r\n          lineWrapping: true,\r\n          lint: true,\r\n          mode: language,\r\n          theme: 'material',\r\n          lineNumbers: true\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","import { useEffect, useState } from 'react'\r\n\r\nconst PREFIX = 'codepen-clone-'\r\n\r\nexport default function useLocalStorage(key, initialValue) {\r\n  const prefixedKey = PREFIX + key\r\n\r\n  const [value, setValue] = useState(() => {\r\n    const jsonValue = localStorage.getItem(prefixedKey)\r\n    if (jsonValue != null) return JSON.parse(jsonValue)\r\n\r\n    if (typeof initialValue === 'function') {\r\n      return initialValue()\r\n    } else {\r\n      return initialValue\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(prefixedKey, JSON.stringify(value))\r\n  }, [prefixedKey, value])\r\n\r\n  return [value, setValue]\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport Editor from './Editor'\r\nimport useLocalStorage from '../hooks/useLocalStorage'\r\n\r\nfunction App() {\r\n  const [html, setHtml] = useLocalStorage('html', '')\r\n  const [css, setCss] = useLocalStorage('css', '')\r\n  const [js, setJs] = useLocalStorage('js', '')\r\n  const [srcDoc, setSrcDoc] = useState('')\r\n\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      setSrcDoc(`\r\n        <html>\r\n          <body>${html}</body>\r\n          <style>${css}</style>\r\n          <script>${js}</script>\r\n        </html>\r\n      `)\r\n    }, 250)\r\n\r\n    return () => clearTimeout(timeout)\r\n  }, [html, css, js])\r\n\r\n  return (\r\n    <>\r\n      <div className=\"pane top-pane\">\r\n        <Editor\r\n          language=\"xml\"\r\n          displayName=\"HTML\"\r\n          value={html}\r\n          onChange={setHtml}\r\n        />\r\n        <Editor\r\n          language=\"css\"\r\n          displayName=\"CSS\"\r\n          value={css}\r\n          onChange={setCss}\r\n        />\r\n        <Editor\r\n          language=\"javascript\"\r\n          displayName=\"JS\"\r\n          value={js}\r\n          onChange={setJs}\r\n        />\r\n      </div>\r\n      <div className=\"pane\">\r\n        <iframe\r\n          srcDoc={srcDoc}\r\n          title=\"output\"\r\n          sandbox=\"allow-scripts\"\r\n          frameBorder=\"0\"\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n        />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}